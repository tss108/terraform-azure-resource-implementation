MODULE 7 TASK DETAILS

1. TASK OVERVIEW
+1. Create storage account via Azure Portal/using PowerShell or Azure CLI script.
+2. Import SA into TF state using terraform import command.
+3. Create container and import any file to this container (image, text, etc).
+4. Create CDN profile and CDN endpoint to previously created SA.
5. Create Linux VM and map storage account container using blobfuse (Extra task: mount should 
be persistent).
6. Create a Recovery Services vault, a backup policy that performs daily backups, and add VM as a 
protected item.
7. Perform backup manually through the portal.
8. Perform restore of backed up VM manually through the portal.
9. Import restored VM into TF state using import blocks and generate configuration for imported 
resource.
10. Extra task: Modify restored VM configuration to comply with a naming convention.



2. TASK DETAILS
+1. Minimal Terraform version is 1.5.0.
+2. All resource names should use a common name pattern and be aligned with Azure abbreviation 
examples. No resource names are hardcoded, so TF configuration is reusable.
3. VM should mount container using custom_data based on templatefile function.
4. Content uploaded to the container should be accessible via CDN endpoint and local VM mount. 
The file added to the VM mount should be available on CDN.
+5. Since backup and restore are time-consuming operations, so keep this in mind when doing 
home task.
6. Restored VM should still have mount with SA container. Note that depending on how you 
implement the mount it could be dropped after VM restart. To avoid that mount can be 
persistent.
7. TF configuration of Restored VM resources should be autogenerated by Terraform.
8. Homework result files:
a. TF configuration for an initial deployment;
b. TF autogenerated configuration for Restored VM.
9. No resource names are hardcoded, so TF templates are reusable.
10. TF configuration has usable outputs, that are used to access to resources, such as storage 
account name, vault name, cdn endpoint, etc.



